!SESSION 2020-06-02 11:53:20.084 -----------------------------------------------
eclipse.buildId=4.6.1.M20160907-1200
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=it_IT
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file C:\Workspaces\ialab2020\ialab_2020\Torta\aima-core\.metadata\.bak_0.log
Created Time: 2020-06-05 12:48:52.149

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.150
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.181
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.182
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.182
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.190
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.190
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.193
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.194
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.195
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.197
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.198
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.211
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.213
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.213
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.215
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.217
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.217
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.247
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.248
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.248
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.269
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.277
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.278
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.287
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.288
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.289
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:162)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:82)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2020-06-05 12:48:52.404
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package it.coluccia.ialab2020.torta.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import aima.core.probability.Factor;
import aima.core.probability.RandomVariable;
import aima.core.probability.TimeRandomVariable;
import aima.core.probability.bayes.DynamicBayesianNetwork;
import aima.core.probability.bayes.Node;
import aima.core.probability.bayes.approx.ParticleFiltering;
import aima.core.probability.bayes.exact.EliminationAsk;
import aima.core.probability.bayes.impl.BayesNet;
import aima.core.probability.bayes.impl.DynamicBayesNet;
import aima.core.probability.bayes.impl.IalabDBN;
import aima.core.probability.domain.BooleanDomain;
import aima.core.probability.example.DynamicBayesNetExampleFactory;
import aima.core.probability.proposition.AssignmentProposition;
import aima.core.probability.util.ProbabilityTable;
import aima.core.probability.util.RandVar;

public class DynamicBNExercise {
	
	private static List<DynamicBayesianNetwork> networks;
	
	//queryVars[i] --> list of query vars for network i
	private static List<TimeRandomVariable[]> queryVars;
	
	//observations[i] --> list of array of observation for network experiment
	//observations[i][j] --> array of observation for experiment i at time j
	private static List<List<AssignmentProposition[]>> observations;
	
	public static void main(String[] args){
		generateNetworks();
		Iterator<TimeRandomVariable[]> queryIterator = queryVars.iterator();
		Iterator<List<AssignmentProposition[]>> obsIterator = observations.iterator();
		Iterator<DynamicBayesianNetwork> networkIterator = networks.iterator();
		
		EliminationAsk[] inferencesOrder = new EliminationAsk[]{
				new EliminationAsk(),
				new EliminationFill(),
				new EliminationMinDegree()
		};

		int experimentCounter = 0;
		
		//ogni ciclo è un esperimento
		while(networkIterator.hasNext()){
			System.out.println("********* EXPERIMENT "+experimentCounter+" *********");
			
			DynamicBayesianNetwork network = networkIterator.next();
			List<AssignmentProposition[]> observations = obsIterator.next();
			List<RandomVariable> queryVars = Arrays.asList(queryIterator.next());
			
			for(EliminationAsk inference : inferencesOrder){
				System.out.println("\tInference type: "+inference.getClass().getSimpleName());
				//creo IalabDBN
				Set<Node> rootNodes = ((BayesNet)network.getPriorNetwork()).getRootNodes();
				IalabDBN myNetwork = new IalabDBN(
													network.getPriorNetwork(), 
													network.getX_0_to_X_1(), 
													network.getE_1(), 
													rootNodes.toArray(new Node[rootNodes.size()]),
													(DynamicBayesNet)network);

				
				//eseguo algoritmo di VE
				ProbabilityTable values = variableElimination(myNetwork,observations,inference,queryVars);
				double sum = 0;
				for(double value : values.getValues()){
					System.out.println(value);
					sum+=value;
				}
				System.out.println(sum);
				
				//mostro risultati
				for(Node node : myNetwork.getLastCPTs().keySet()){
					if(queryVars.contains(node.getRandomVariable())){
						System.out.println("\tNode: "+node+" --> CPT: "+myNetwork.getLastCPTs().get(node));	
					}
				}
				
				//testo con particle filtering
				int N = 100;
				ParticleFiltering pf = new ParticleFiltering(N,network);
				AssignmentProposition[][] distApprox = null;
				
				for(AssignmentProposition[] obsAssign : observations){
					distApprox = pf.particleFiltering(obsAssign);
				}

				float numberTrue = 0f;	
				for(AssignmentProposition[] val : distApprox){
					for(AssignmentProposition valIn : val){
						if((Boolean)valIn.getValue() && queryVars.contains(valIn.getTermVariable())){
							numberTrue+=1f;
						}
					}
				}
				System.out.println("\tParticleFiltering (approx): "+numberTrue/100f+" , "+(1f-(numberTrue/100f)));
				System.out.println("---------");	
			}
			experimentCounter++;
		}
	}
	
	/**
	 * It applies VE algorithm to specified dbn applying rollup filtering until it reaches final time step
	 * @param myNetwork
	 * @param observations
	 */
	private static ProbabilityTable variableElimination(IalabDBN myNetwork,List<AssignmentProposition[]> observations,EliminationAsk inference, List<RandomVariable> queryVars){
		//per ogni observation faccio uno step forward della mia network
		Factor lastFactor = null;
		for(AssignmentProposition[] obs : observations){
			List<Factor> factorList = new ArrayList<Factor>(Arrays.asList(new Factor[]{}));
			if(lastFactor != null){
				factorList.add(lastFactor);
			}
			lastFactor = EliminationAsk.getProbTableFromFactors(myNetwork.forward(obs,inference,factorList,queryVars),queryVars);
			updateVariableReferenceToPreviousStep((ProbabilityTable)lastFactor,myNetwork.getCurrentSlice());
			
		}
		return (ProbabilityTable)lastFactor;
		//return EliminationAsk.getProbTableFromFactors(factors,queryVars);
		
	}
	
	private static void updateVariableReferenceToPreviousStep(ProbabilityTable lastFactor,DynamicBayesNet slice){
		Map<RandomVariable, RandomVariable> x1Toxo = slice.getX_1_to_X_0();
		Set<RandomVariable> origVariables = lastFactor.getArgumentVariables();
		Set<RandomVariable> updatedVariables = new HashSet<>();
		for(RandomVariable origVar : origVariables){
			updatedVariables.add(x1Toxo.get(origVar));
		}
		ProbabilityTable tmp = new ProbabilityTable(lastFactor.getValues(),updatedVariables.toArray(new ProbabilityTable[](updatedVariables.)));
		lastFactor.setRandomVarInfo(randomVarInfo);
	}

	
	/**
	 * It populates the Networks class variable with the DBN for the experiments
	 * It initializes also QueryVars class variable with the q
	 */
	private static void generateNetworks(){
		networks = new LinkedList<>();
		observations = new LinkedList<>();
		//il nome delle queryVars è fuorviante (è sempre lo stesso del tempo t0 in quanto mantengo la struttura degli slice)
		queryVars = new LinkedList<>(); 

		//****** EXPERIMENT 0 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		TimeRandomVariable[] randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		List<AssignmentProposition[]> observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 1 (umbrella) *******/
		networks.add(DynamicBayesNetExampleFactory.getUmbrellaWorldNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Rain_t-1", new BooleanDomain()),
				new RandVar("Rain_t", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Umbrella_t", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 2 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("J_t-1", new BooleanDomain()),
				new RandVar("Y", new BooleanDomain())
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});

		observations.add(observationDBN);
		
		//****** EXPERIMENT 3 (circuit) *******/
		networks.add(DynamicBayesNetExampleFactory.getDigitalCircuitNetExample());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("I_t-1", new BooleanDomain()),
				new RandVar("I", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 3
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 4
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});
		
		//step 5
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 6
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 7
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 8
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), false )
		});
		
		//step 9
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Z", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
		
		
		//****** EXPERIMENT 4 (asia) *******/
		networks.add(DynamicBayesNetExampleFactory.getAsiaNetwork());
		
		randVars = new TimeRandomVariable[]{
				//new RandVar("Asia_t-1", new BooleanDomain()),
				new RandVar("Asia", new BooleanDomain()) //per bug su particlefiltering
		};
		queryVars.add(randVars);
		
		
		observationDBN = new LinkedList<>();
		
		//step 1
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), false )
		});
		
		//step 2
		observationDBN.add(new AssignmentProposition[]{
				new AssignmentProposition(new RandVar("Either", new BooleanDomain()), true ),
				new AssignmentProposition(new RandVar("Bronc", new BooleanDomain()), true )
		});

		observations.add(observationDBN);
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2020-06-05 12:48:52.405
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2020-06-05 12:48:52.405
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1250)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.ui 2 2 2020-06-06 01:55:52.446
!MESSAGE Invalid preference category path: org.jboss.tools.common.model.ui.MainPreferencePage (bundle: org.jboss.tools.common.jdt.debug.ui, page: org.jboss.tools.common.jdt.debug.ui.preferences.RemoteDebugPreferencePage)

!ENTRY org.eclipse.ui 2 2 2020-06-06 01:55:52.447
!MESSAGE Invalid preference category path: org.jboss.tools.common.model.ui.MainPreferencePage (bundle: org.jboss.tools.foundation.ui, page: org.jboss.tools.foundation.ui.internal.credentials.CredentialPreferencePage)

!ENTRY org.eclipse.ui 2 2 2020-06-06 01:55:52.447
!MESSAGE Invalid preference category path: org.jboss.tools.common.model.ui.MainPreferencePage (bundle: org.jboss.tools.openshift.express.ui, page: org.jboss.tools.openshift.express.ui.preferences.OpenShiftPreferencePage)

!ENTRY org.eclipse.ui 2 2 2020-06-06 01:55:52.448
!MESSAGE Invalid preference category path: org.jboss.tools.common.model.ui.MainPreferencePage (bundle: org.jboss.tools.openshift.ui, page: org.jboss.tools.openshift.ui.preferences.OpenShiftPreferencePage)

!ENTRY org.eclipse.ui 2 2 2020-06-06 01:55:52.448
!MESSAGE Invalid preference category path: org.jboss.tools.common.model.ui.MainPreferencePage (bundle: org.jboss.tools.runtime.ui, page: org.jboss.tools.runtime.preferences.RuntimePreferencePage)

!ENTRY org.eclipse.ui 2 2 2020-06-06 01:55:52.449
!MESSAGE Invalid preference category path: org.jboss.tools.common.model.ui.MainPreferencePage (bundle: org.jboss.tools.usage, page: org.jboss.tools.usage.analytics.preferences.UsageAnalyticsPreferencePage)
